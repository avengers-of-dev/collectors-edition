# # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Content: Traefik 4 kubernetes ingress on AKS
# Author: Jan Jambor, XWare GmbH
# Author URI: https://xwr.ch
# Date: 29.02.2020
#
# https://docs.traefik.io/user-guides/crd-acme/
#
# # # # # # # # # # # # # # # # # # # # # # # # # #

# # # # # # # # # # # # # # #
# Custom Resource Definitions
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us
  namespace: ns-admin
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us
  namespace: ns-admin
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us
  namespace: ns-admin
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us
  namespace: ns-admin
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.containo.us
  namespace: ns-admin
spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TraefikService
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced
---
# # # # # # # # # # # # # # #
# Cluster Role
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ns-admin
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutetcps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - tlsoptions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - traefikservices
    verbs:
      - get
      - list
      - watch
---
# # # # # # # # # # # # # # #
# Cluster Role Binding
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ns-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: ns-admin
---
# # # # # # # # # # # # # # #
# Service traefik
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: ns-admin
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - protocol: TCP
      name: web
      port: 80
    - protocol: TCP
      name: websecure
      port: 443
    - protocol: TCP
      name: mqtt
      port: 8883
  selector:
    app: traefik
---
# # # # # # # # # # # # # # #
# Service Account traefik
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: ns-admin
  name: traefik-ingress-controller
---
# # # # # # # # # # # # # # #
# deployment traefik
# Instant update: kubectl set image deployments/traefik traefik=traefik:v2.1.0 -n default
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: ns-admin
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.1.0
          args:
            - --api.dashboard=true
            - --api.insecure=false
            - --accesslog
            - --entrypoints.web.Address=:80
            - --entrypoints.websecure.Address=:443
            - --entrypoints.mqtt.Address=:8883
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.tlschallenge
            - --certificatesresolvers.myresolver.acme.email=your@mail.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: mqtt
              containerPort: 8883

---
# # # # # # # # # # # # # # #
# Middleware: 
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ipwl-onlylocalip
spec:
  ipWhiteList:
    sourceRange:
      - 1.2.3.4/32 # your public IP to limit access to only that ip
      - 127.0.0.1/32

#
# kubectl port-forward --address 0.0.0.0 service/traefik 8000:8000 8080:8080 443:4443 -n ns-traefik
# http://127.0.0.1:8080/dashboard/#/
#
#
---
# # # # # # # # # # # # # # # # # # # # # # # # # #
# traefik dashboard
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ir-traefik
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`traefik.at.your.domain`) # || Host(`1.2.3.4`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
    kind: Rule
    services:
    - name: api@internal
      kind: TraefikService
    middlewares:
    - name: ipwl-onlylocalip
  tls:
    certResolver: myresolver
