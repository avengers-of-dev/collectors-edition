# # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Content: owntracks & mosquitto for hatschi.io (no longer in use)
# Author: Jan Jambor, XWare GmbH
# Author URI: https://xwr.ch
# Date: 31.03.2020
#
# # # # # # # # # # # # # # # # # # # # # # # # # #

# # # # # # # # # # # # # # #
# namespace
# 2
apiVersion: v1
kind: Namespace
metadata:
  name: ns-hatschi
---
# # # # # # # # # # # # # # #
# secret for azure file storage
# echo -n 'sthatschikstjj001' | base64
# echo -n 'your key' | base64
apiVersion: v1
kind: Secret
metadata:
  name: sec-azure-file
  namespace: ns-hatschi
  labels:
    applicationname: hatschi
    environment: test
    owner: jan.jambor-at-xwr.ch
    costcenter: jj
    dr: essential
type: Opaque
data:
  azurestorageaccountname: azurestorageaccountname=
  azurestorageaccountkey: add base 64 key here
---
# # # # # # # # # # # # # # #
# Deployment mosquitto
# kubectl set image deployments/mosquitto owntracks=eclipse-mosquitto:1.6.9 -n ns-hatschi
# kubectl scale deployments/mosquitto --replicas=0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  namespace: ns-hatschi
  labels:
    applicationname: hatschi
    environment: test
    owner: jan.jambor-at-xwr.ch
    costcenter: jj
    dr: essential
spec:
  selector:
    matchLabels:
      tier: app-mosquitto
  template:
    metadata:
      labels:
        applicationname: hatschi
        tier: app-mosquitto
        environment: test
        owner: jan.jambor-at-xwr.ch
        costcenter: jj
        dr: essential
    spec:
      containers:
      - name: mosquitto
        image: eclipse-mosquitto:1.6.9
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 1883
          protocol: TCP
        - containerPort: 8883
          protocol: TCP
        - containerPort: 9001
          protocol: TCP
        volumeMounts:
        - name: hatschi-files
          mountPath: /mosquitto/data
          subPath: mosquitto-data
        - name: hatschi-files
          mountPath: /mosquitto/logs
          subPath: mosquitto-logs
        - name: hatschi-files
          mountPath: /mosquitto/config
          subPath: mosquitto-conf
        # resources:
          # requests:
          #   cpu: 100m
          #   memory: 128Mi
          # limits:
          #   cpu: 250m
          #   memory: 256Mi
      volumes:
      - name: hatschi-files
        azureFile:
          secretName: sec-azure-file
          shareName: shsthatschikstjj001
          readOnly: false
---
# # # # # # # # # # # # # # #
# Deployment owntracks
# kubectl set image deployments/owntracks owntracks=owntracks/recorder:0.8.6-9 -n ns-hatschi
# kubectl scale deployments/owntracks --replicas=0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: owntracks
  namespace: ns-hatschi
  labels:
    applicationname: hatschi
    environment: test
    owner: jan.jambor-at-xwr.ch
    costcenter: jj
    dr: essential
spec:
  selector:
    matchLabels:
      tier: app-owntracks
  template:
    metadata:
      labels:
        applicationname: hatschi
        tier: app-owntracks
        environment: test
        owner: jan.jambor-at-xwr.ch
        costcenter: jj
        dr: essential
    spec:
      containers:
      - name: owntracks
        image: owntracks/recorder:0.8.6-9
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8083
          protocol: TCP
        # env:
        # see /config/recorder.conf
        volumeMounts:
        - name: hatschi-files
          mountPath: /config
          subPath: config
        - name: hatschi-files
          mountPath: /store
          subPath: store
        # resources:
          # requests:
          #   cpu: 100m
          #   memory: 128Mi
          # limits:
          #   cpu: 250m
          #   memory: 256Mi
      volumes:
      - name: hatschi-files
        azureFile:
          secretName: sec-azure-file
          shareName: shsthatschikstjj001
          readOnly: false
---
# # # # # # # # # # # # # # #
# Deployment owntracks frontend
# kubectl set image deployments/owntracks-front owntracks-front=owntracks/frontend:v2.2.0 -n ns-hatschi
# kubectl scale deployments/owntracks-front --replicas=0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: owntracks-front
  namespace: ns-hatschi
  labels:
    applicationname: hatschi
    environment: test
    owner: jan.jambor-at-xwr.ch
    costcenter: jj
    dr: essential
spec:
  selector:
    matchLabels:
      tier: front-owntracks
  template:
    metadata:
      labels:
        applicationname: hatschi
        tier: front-owntracks
        environment: test
        owner: jan.jambor-at-xwr.ch
        costcenter: jj
        dr: essential
    spec:
      containers:
      - name: owntracks
        image: owntracks/frontend:v2.2.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: SERVER_HOST
          value: "owntracks"
        - name: SERVER_PORT
          value: "8083"
        volumeMounts:
        - name: hatschi-files
          mountPath: /usr/share/nginx/html/config
          subPath: custom
        # resources:
          # requests:
          #   cpu: 100m
          #   memory: 128Mi
          # limits:
          #   cpu: 250m
          #   memory: 256Mi
      volumes:
      - name: hatschi-files
        azureFile:
          secretName: sec-azure-file
          shareName: shsthatschikstjj001
          readOnly: false
---
# # # # # # # # # # # # # # #
# Service mosquitto
apiVersion: v1
kind: Service
metadata:
  name: mosquitto
  namespace: ns-hatschi
spec:
  type: ClusterIP #NodePort
  selector:
    tier: app-mosquitto
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9001
      # nodePort: 30777
    - name: mqtt
      protocol: TCP
      port: 1883
      # targetPort: 1883
      # nodePort: 30777
---
# # # # # # # # # # # # # # #
# Service owntracks
apiVersion: v1
kind: Service
metadata:
  name: owntracks
  namespace: ns-hatschi
spec:
  type: ClusterIP #NodePort
  selector:
    tier: app-owntracks
  ports:
    - name: http
      protocol: TCP
      port: 8083
      targetPort: 8083
      # nodePort: 30777
---
# # # # # # # # # # # # # # #
# Service owntracks front
apiVersion: v1
kind: Service
metadata:
  name: owntracks-front
  namespace: ns-hatschi
spec:
  type: ClusterIP #NodePort
  selector:
    tier: front-owntracks
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      # nodePort: 30777
---
# # # # # # # # # # # # # # # # # # # # # # # # # #
# external endpoint
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ir-owntracks-hatschi
  namespace: ns-hatschi
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`hatschi.at.your.domain`) # && PathPrefix(`/`)
    kind: Rule
    services:
    - name: owntracks-front
      namespace: ns-hatschi
      port: 80
  tls:
    certResolver: myresolver
---
# # # # # # # # # # # # # # # # # # # # # # # # # #
# external endpoint
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ir-mosquitto-hatschi
  namespace: ns-hatschi
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`hatschi.at.your.domain`) && PathPrefix(`/mqtt`)
    kind: Rule
    services:
    - name: mosquitto
      namespace: ns-hatschi
      port: 80
  tls:
    certResolver: myresolver